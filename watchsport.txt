(async () => {
  if (!window.Fuse) {
    await new Promise((resolve, reject) => {
      const script = document.createElement('script');
      script.src = 'https://cdn.jsdelivr.net/npm/fuse.js@7.0.0';
      script.onload = resolve;
      script.onerror = reject;
      document.head.appendChild(script);
    });
  }

  const teamNameMap = {
  "aew": "aew",
  "ajax": "ajax",
  "atalanta": "atalanta",
  "athletic club": "athletic club",
  "atlanta hawks": "atlanta hawks",
  "atlas": "atlas",
  "bahia": "bahia",
  "bayer munich": "bayer munich",
  "bodø / glimt": "bodø / glimt",
  "boston celtics": "boston celtics",
  "brooklyn nets": "brooklyn nets",
  "charlotte hornet": "charlotte hornet",
  "chelsea": "chelsea",
  "chicago bulls": "chicago bulls",
  "chivas": "chivas",
  "cleveland cavaliers": "cleveland cavaliers",
  "club brugge": "club brugge",
  "dallas mavericks": "dallas mavericks",
  "detroit pistons": "detroit pistons",
  "flamengo": "flamengo",
  "formula 1 - usa grand prix": "formula 1 - usa grand prix",
  "frankfurt": "frankfurt",
  "galatasaray": "galatasaray",
  "internacional": "internacional",
  "juventus": "juventus",
  "león": "león",
  "liverpool": "liverpool",
  "los angeles chargers": "los angeles chargers",
  "los angeles clippers": "los angeles clippers",
  "marseille": "marseille",
  "memphis grizzlies": "memphis grizzlies",
  "miami heat": "miami heat",
  "milwaukee bucks": "milwaukee bucks",
  "minnesota timberwolves": "minnesota timberwolves",
  "minnesota vikings": "minnesota vikings",
  "monaco": "monaco",
  "nascar cup series - race": "nascar cup series - race",
  "new orlean pelicans": "new orlean pelicans",
  "new york knicks": "new york knicks",
  "orlando magic": "orlando magic",
  "pachuca": "pachuca",
  "philadelphia 76ers": "philadelphia 76ers",
  "phoenix suns": "phoenix suns",
  "portland trail blazers": "portland trail blazers",
  "qarabağ": "qarabağ",
  "querétaro": "querétaro",
  "racing club": "racing club",
  "real madrid": "real madrid",
  "sacromento kings": "sacromento kings",
  "san antonio spurs": "san antonio spurs",
  "seattle mariners": "seattle mariners",
  "slavia prague": "slavia prague",
  "sporting cp": "sporting cp",
  "tigres uanl": "tigres uanl",
  "tijuana": "tijuana",
  "toluca": "toluca",
  "toronto blue jays": "toronto blue jays",
  "toronto raptors": "toronto raptors",
  "tottenham": "tottenham",
  "uefa golazo show": "uefa golazo show",
  "utah jazz": "utah jazz",
  "washington wizards": "washington wizards"
};

  const roxieStreamsCached = [
  {title: "bodø / glimt vs galatasaray", url: "https://roxiestreams.cc/soccer-streams-1"},
  {title: "athletic club vs qarabağ", url: "https://roxiestreams.cc/soccer-streams-2"},
  {title: "uefa golazo show", url: "https://roxiestreams.cc/soccer-streams-3"},
  {title: "atalanta vs slavia prague", url: "https://roxiestreams.cc/soccer-streams-4"},
  {title: "bayer munich vs club brugge", url: "https://roxiestreams.cc/soccer-streams-4"},
  {title: "ajax vs chelsea", url: "https://roxiestreams.cc/soccer-streams-5"},
  {title: "frankfurt vs liverpool", url: "https://roxiestreams.cc/soccer-streams-6"},
  {title: "monaco vs tottenham", url: "https://roxiestreams.cc/soccer-streams-7"},
  {title: "juventus vs real madrid", url: "https://roxiestreams.cc/soccer-streams-8"},
  {title: "marseille vs sporting cp", url: "https://roxiestreams.cc/soccer-streams-9"},
  {title: "bahia vs internacional", url: "https://roxiestreams.cc/soccer-streams-10"},
  {title: "flamengo vs racing club", url: "https://roxiestreams.cc/soccer-streams-11"},
  {title: "chivas vs querétaro", url: "https://roxiestreams.cc/soccer-streams-13"},
  {title: "pachuca vs tigres uanl", url: "https://roxiestreams.cc/soccer-streams-14"},
  {title: "tijuana vs toluca", url: "https://roxiestreams.cc/soccer-streams-14"},
  {title: "atlas vs león", url: "https://roxiestreams.cc/soccer-streams-13"},
  {title: "seattle mariners vs toronto blue jays", url: "https://roxiestreams.cc/mlb-streams-1"},
  {title: "cleveland cavaliers vs new york knicks", url: "https://roxiestreams.cc/nba-streams-1"},
  {title: "miami heat vs orlando magic", url: "https://roxiestreams.cc/nba-streams-2"},
  {title: "brooklyn nets vs charlotte hornet", url: "https://roxiestreams.cc/nba-streams-3"},
  {title: "boston celtics vs philadelphia 76ers", url: "https://roxiestreams.cc/nba-streams-4"},
  {title: "atlanta hawks vs toronto raptors", url: "https://roxiestreams.cc/nba-streams-5"},
  {title: "memphis grizzlies vs new orlean pelicans", url: "https://roxiestreams.cc/nba-streams-6"},
  {title: "chicago bulls vs detroit pistons", url: "https://roxiestreams.cc/nba-streams-7"},
  {title: "milwaukee bucks vs washington wizards", url: "https://roxiestreams.cc/nba-streams-8"},
  {title: "los angeles clippers vs utah jazz", url: "https://roxiestreams.cc/nba-streams-9"},
  {title: "dallas mavericks vs san antonio spurs", url: "https://roxiestreams.cc/nba-streams-1"},
  {title: "phoenix suns vs sacromento kings", url: "https://roxiestreams.cc/nba-streams-10"},
  {title: "minnesota timberwolves vs portland trail blazers", url: "https://roxiestreams.cc/nba-streams-5"},
  {title: "nascar cup series - race", url: "https://roxiestreams.cc/nascar"},
  {title: "formula 1 - usa grand prix", url: "https://roxiestreams.cc/f1-streams"},
  {title: "aew", url: "https://roxiestreams.cc/aew"},
  {title: "los angeles chargers vs minnesota vikings", url: "https://roxiestreams.cc/nfl-streams-1"}
];

  function normalizeTeamName(name) {
    name = name.toLowerCase().trim();
    return teamNameMap[name] || name;
  }

  function normalizeTitle(title) {
    let t = title.toLowerCase().replace(/@/g, 'vs').trim();
    if (!t.includes('vs')) {
      return (teamNameMap[t] || t);
    }
    let teams = t.split('vs').map(s => normalizeTeamName(s.trim()));
    teams.sort();
    return teams.join(' vs ');
  }

  const normalizedCache = roxieStreamsCached.map(item => ({
    title: normalizeTitle(item.title),
    url: item.url
  }));

  const fuse = new Fuse(normalizedCache, {
    keys: ['title'],
    threshold: 0.3,
    includeScore: true,
    distance: 50,
    ignoreLocation: true,
  });

  function findBestMatch(eventTitle) {
    const lowerTitle = eventTitle.toLowerCase();
    if (lowerTitle.includes("ufc")) {
      return "https://roxiestreams.cc/ufc";
    }
    if (lowerTitle.includes("grand prix")) {
      return "https://roxiestreams.cc/f1-streams";
    }
    const normTitle = normalizeTitle(eventTitle);
    const results = fuse.search(normTitle);
    if (results.length && results[0].score <= 0.3) {
      return results[0].item.url;
    }
    return 'https://roxiestreams.cc/missing';
  }

  function getEventTitleFromListDiv(listDiv) {
    if (!listDiv) return '';
    let titleText = '';
    listDiv.childNodes.forEach(node => {
      if (node.nodeType === Node.TEXT_NODE) {
        const trimmed = node.textContent.trim();
        if (trimmed) titleText += trimmed + ' ';
      }
    });
    return titleText.trim();
  }

  function attachAutofill() {
    document.querySelectorAll('button.add.modal-trigger').forEach(button => {
      button.removeEventListener('click', autofillHandler);
      button.addEventListener('click', autofillHandler);
    });
  }

  function autofillHandler(e) {
    const gameId = e.currentTarget.getAttribute('data-target');
    const listDiv = e.currentTarget.closest('.list');
    const eventTitle = getEventTitleFromListDiv(listDiv);
    console.log('Extracted event title:', eventTitle, 'for gameId:', gameId);

    setTimeout(() => {
      const form = document.querySelector(`#form-${gameId}`);
      if (!form) {
        console.warn('Form not found for gameId:', gameId);
        return;
      }
      const streamUrl = findBestMatch(eventTitle);
      form.querySelector('#site').value = 'RoxieStreams';
      form.querySelector('#url').value = streamUrl;
      form.querySelector('#channel').value = 'Main';
      form.querySelector('#fps').value = '60';

      const bitrateInput = form.querySelector('#bitrate') || form.querySelector('#bps') || form.querySelector('input[name="bitrate"]');
      if (bitrateInput) bitrateInput.value = '7000';

      const adsInput = form.querySelector('#ads') || form.querySelector('input[name="ads"]') || form.querySelector('input[name="numAds"]');
      if (adsInput) adsInput.value = '0';

      form.querySelectorAll('input[type="checkbox"]').forEach(cb => cb.checked = true);
      console.log(`Autofilled URL: ${streamUrl} with bitrate 7000 and ads 0`);
    }, 300);
  }

  attachAutofill();
})();
